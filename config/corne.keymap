/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <39 40 41 0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0>;
            timeout-ms = <50>;
        };

        open-parenthesis {
            bindings = <&kp LPAR>;
            key-positions = <8 9>;
            layers = <0>;
        };

        close-parenthesis {
            bindings = <&kp RPAR>;
            key-positions = <10 9>;
            layers = <0>;
        };

        open-brackets {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <20 21>;
            layers = <0>;
        };

        close-brackets {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <22 21>;
        };

        open-braces {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <32 33>;
        };

        close-braces {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <33 34>;
        };

        big-nav-layer {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q        &kp W        &kp E         &kp R         &kp T        &kp Y    &kp U            &kp I         &kp O        &kp P           &trans
&trans  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G        &kp H    &hmr RSHFT J     &hmr RCTRL K  &hmr RALT L  &hmr RGUI SEMI  &trans
&trans  &kp Z        &kp X        &kp C         &kp V         &kp B        &kp N    &kp M            &kp COMMA     &kp DOT      &kp FSLH        &trans
                                  &kp LGUI      &lt 1 TAB     &kp SPACE    &kp RET  &lt 2 BACKSPACE  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans        &kp NUMBER_7        &kp NUMBER_8         &kp NUMBER_9         &trans       &trans   &trans  &trans  &trans  &trans  &trans
&trans  &kp LGUI      &hml LALT NUMBER_4  &hml LCTRL NUMBER_5  &hml NUMBER_6 LSHFT  &trans       &trans   &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_0  &kp NUMBER_1        &kp NUMBER_2         &kp NUMBER_3         &trans       &trans   &trans  &trans  &trans  &trans  &trans
                                          &trans               &trans               &kp SPACE    &kp RET  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT           &kp HASH          &kp DLLR         &kp PRCNT    &trans   &kp K_COPY      &kp UP_ARROW    &kp K_PASTE      &trans  &trans
&trans  &kp LGUI  &hml LALT MINUS  &hml LCTRL CARET  &hml LSHFT AMPS  &kp BSLH     &trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans    &kp UNDER        &kp PLUS          &trans           &kp PIPE     &trans   &trans          &trans          &trans           &trans  &trans
                                   &trans            &trans           &kp SPACE    &kp RET  &trans          &bl BL_TOG
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp PG_UP      &trans   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME  &kp PAGE_DOWN  &kp END  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans         &trans   &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
